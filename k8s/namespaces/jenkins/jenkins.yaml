---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: jenkins
  namespace: jenkins
  annotations:
    flux.weave.works/ignore: "false"
    flux.weave.works/automated: "false"

spec:
  releaseName: jenkins
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: jenkins
    version: 1.9.4
  values:
    master:
      # Used for label app.kubernetes.io/component 
      componentName: "jenkins-master"
      image: "hmctspublic.azurecr.io/jenkins"
      imageTag: "db3qfy"
      imagePullPolicy: "IfNotPresent"
      podLabels:
        aadpodidbinding: jenkins

      jenkinsAdminEmail: noreply@reform.hmcts.net

      resources:
        requests:
          cpu: "50m"
          memory: "512Mi"
        limits:
          cpu: "2000m"
          memory: "4096Mi"

      javaOpts: >-
        -XX:InitialRAMPercentage=20.0
        -XX:MaxRAMPercentage=65.0
        -XX:MinRAMPercentage=20.0
        -XX:+UseParallelOldGC
        -Djenkins.azure-keyvault.uami.enabled=true
        -Djenkins.ui.refresh=true
        -Dorg.apache.commons.jelly.tags.fmt.timeZone=Europe/London
        -Dhudson.model.DirectoryBrowserSupport.CSP="default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; font-src 'self'; img-src 'self'"

      usePodSecurityContext: true
      # can't figure out why this no longer works, it works locally, possibly helm version bug?
      #runAsUser: 1000
      #fsGroup: 1000
      servicePort: 8080
      targetPort: 8080
      serviceType: ClusterIP

      healthProbes: true
      healthProbesLivenessTimeout: 90
      healthProbesReadinessTimeout: 60
      healthProbeReadinessPeriodSeconds: 10
      healthProbeLivenessFailureThreshold: 12
      slaveListenerPort: 50000
      slaveHostPort:
      disabledAgentProtocols:
        - JNLP-connect
        - JNLP2-connect
      cli: false

      slaveListenerServiceType: "ClusterIP"

      installPlugins:

      # Below is the implementation of Jenkins Configuration as Code.  Add a key under configScripts for each configuration area,
      # where each corresponds to a plugin or section of the UI.  Each key (prior to | character) is just a label, and can be any value.
      # Keys are only used to give the section a meaningful name.  The only restriction is they may only contain RFC 1123 \ DNS label
      # characters: lowercase letters, numbers, and hyphens.  The keys become the name of a configuration yaml file on the master in
      # /var/jenkins_home/casc_configs (by default) and will be processed by the Configuration as Code Plugin.  The lines after each |
      # become the content of the configuration yaml file.  The first line after this is a JCasC root element, eg jenkins, credentials,
      # etc.  Best reference is https://<jenkins_url>/configuration-as-code/reference.
      JCasC:
        enabled: true
        configScripts:
          misc-jenkins-settings: |
            jenkins:
              crumbIssuer:
                standard:
                  excludeClientIPFromCrumb: false
              markupFormatter:
                rawHtml:
                  disableSyntaxHighlighting: false
              disabledAdministrativeMonitors:
                - "jenkins.security.QueueItemAuthenticatorMonitor"
                - "jenkins.security.s2m.MasterKillSwitchWarning"
              numExecutors: 0
          default-view: |
            jenkins:
              primaryView:
                all:
                  name: all
          auth: |
            jenkins:
              authorizationStrategy:
                globalMatrix:
                  permissions:
                    - "Overall/Administer:300e771f-856c-45cc-b899-40d78281e9c1"
                    - "Overall/Administer:c36eaede-a0ae-4967-8fed-0a02960b1370"
                    - "Overall/Administer:3830f73c-22c0-436c-893d-e1869d2bc551" # platform engineering in RPE899 tenant
                    - "Overall/Read:authenticated"
                    - "View/Read:authenticated"
                    - "Run/Replay:authenticated"
                    - "Run/Update:authenticated"
                    - "Job/Configure:authenticated"
                    - "Job/Cancel:authenticated"
                    - "Job/Read:authenticated"
                    - "Job/Build:authenticated"
                    - "Job/Move:authenticated"
                    - "Job/Discover:authenticated"
                    - "Job/Discover:anonymous"
                    - "Job/Workspace:authenticated"
                    - "Credentials/View:authenticated"
                    - "Build Failure Analyzer/RemoveCause:authenticated"
                    - "Build Failure Analyzer/UpdateCauses:authenticated"
                    - "Build Failure Analyzer/ViewCauses:authenticated"
                    - "Lockable Resources/Unlock:authenticated"
                    - "Lockable Resources/Reserve:authenticated"
                    - "SCM/Tag:authenticated"
          global-library: |
            unclassified:
              globalLibraries:
                libraries:
                  - name: 'Infrastructure'
                    includeInChangesets: false
                    defaultVersion: master
                    retriever:
                      modernSCM:
                        scm:
                          github:
                            credentialsId: hmcts-jenkins-cnp
                            repoOwner: hmcts
                            repository: cnp-jenkins-library
                  - name: 'Pipeline'
                    includeInChangesets: false
                    defaultVersion: master
                    retriever:
                      modernSCM:
                        scm:
                          github:
                            credentialsId: hmcts-jenkins-cnp
                            repoOwner: hmcts
                            repository: cnp-jenkins-library
          slack: |
            unclassified:
              slackNotifier:
                teamDomain: hmcts-reform
                tokenCredentialId: slack-token
                botUser: true
          sonar: |
            unclassified:
              sonarGlobalConfiguration:
                installations:
                  - additionalAnalysisProperties: sonar.organization=hmcts
                    name: SonarQube
                    credentialsId: 'sonarcloud-api-token'
                    serverUrl: 'https://sonarcloud.io'
          timestamper: |
            unclassified:
              timestamperConfig:
                allPipelines: true
          theme: |
            unclassified:
              simple-theme-plugin:
                elements:
                - cssUrl:
                    url: ""
          build-discarders: |
            unclassified:
              buildDiscarders:
                configuredBuildDiscarders:
                - "jobBuildDiscarder"
                - simpleBuildDiscarder:
                    discarder:
                      logRotator:
                        artifactDaysToKeepStr: "14"
                        artifactNumToKeepStr: "20"
                        daysToKeepStr: "14"
                        numToKeepStr: "20"
          credentials: |
            credentials:
              system:
                domainCredentials:
                  - credentials:
                      - string:
                          scope: GLOBAL
                          id: sonarcloud-api-token
                          secret: '${sonarcloud-api-token}'
                          description: SonarCloud API token
                      - string:
                          scope: GLOBAL
                          id: "fortify-on-demand"
                          secret: "${fortify-on-demand}"
                          description: "Fortify - token"
                      - string:
                          scope: GLOBAL
                          id: slack-token
                          secret: '${slack-token}'
                          description: Slack token
                      - usernamePassword:
                          description: "GitHub - Service account"
                          id: "jenkins-github-hmcts-api-token"
                          password: "${hmcts-github-apikey}"
                          scope: GLOBAL
                          username: "jenkins-reform-hmcts3"
                      - usernamePassword:
                          description: "GitHub - CMC"
                          id: "jenkins-github-hmcts-api-token_cmc"
                          password: "${hmcts-github-apikey-cmc}"
                          scope: GLOBAL
                          username: "jenkins-reform-cmc"
                      - usernamePassword:
                          description: "GitHub - Divorce"
                          id: "jenkins-github-hmcts-api-token_div"
                          password: "${hmcts-github-apikey-div}"
                          scope: GLOBAL
                          username: "jenkins-reform-div"
                      - usernamePassword:
                          description: "GitHub - Financial remedy"
                          id: "jenkins-github-hmcts-api-token_finrem"
                          password: "${hmcts-github-apikey-finrem}"
                          scope: GLOBAL
                          username: "jenkins-reform-finrem"
                      - usernamePassword:
                          description: "GitHub - CCD"
                          id: "jenkins-github-hmcts-api-token_cdm"
                          password: "${hmcts-github-apikey-cdm}"
                          scope: GLOBAL
                          username: "jenkins-reform-cdm"
                      - usernamePassword:
                          description: "GitHub - IAC"
                          id: "jenkins-github-hmcts-api-token_iac"
                          password: "${hmcts-github-apikey-iac}"
                          scope: GLOBAL
                          username: "jenkins-reform-iac"
                      - usernamePassword:
                          description: "GitHub - Platform"
                          id: "jenkins-github-hmcts-api-token_platform"
                          password: "${hmcts-github-apikey-platform}"
                          scope: GLOBAL
                          username: "jenkins-reform-platform"
                      - usernamePassword:
                          description: "GitHub - RPA"
                          id: "jenkins-github-hmcts-api-token_rpa"
                          password: "${hmcts-github-apikey-rpa}"
                          scope: GLOBAL
                          username: "jenkins-reform-rpa"
                      - usernamePassword:
                          description: "GitHub - SSCS"
                          id: "jenkins-github-hmcts-api-token_sscs"
                          password: "${hmcts-github-apikey-sscs}"
                          scope: GLOBAL
                          username: "jenkins-reform-sscs"
                      - usernamePassword:
                          description: "GitHub - Probate"
                          id: "jenkins-github-hmcts-api-token_probate"
                          password: "${hmcts-github-apikey-probate}"
                          scope: GLOBAL
                          username: "jenkins-reform-probate"
                      - usernamePassword:
                          description: "GitHub - Fees and Pay"
                          id: "jenkins-github-hmcts-api-token_feepay"
                          password: "${hmcts-github-apikey-feepay}"
                          scope: GLOBAL
                          username: "jenkins-reform-feepay"
                      - usernamePassword:
                          description: "GitHub - Scheduling and listing"
                          id: "jenkins-github-hmcts-api-token_sl"
                          password: "${hmcts-github-apikey-sl}"
                          scope: GLOBAL
                          username: "jenkins-reform-sl"
                      - usernamePassword:
                          description: "GitHub - CNP"
                          id: "jenkins-github-hmcts-api-token_cnp"
                          password: "${hmcts-github-apikey-cnp}"
                          scope: GLOBAL
                          username: "jenkins-reform-cnp"
                      - usernamePassword:
                          description: "GitHub - IDAM"
                          id: "jenkins-github-hmcts-api-token_idam"
                          password: "${hmcts-github-apikey-idam}"
                          scope: GLOBAL
                          username: "jenkins-reform-idam"
                      - usernamePassword:
                          description: "GitHub - Civil Enforcement"
                          id: "jenkins-github-hmcts-api-token_cet"
                          password: "${hmcts-github-apikey-cet}"
                          scope: GLOBAL
                          username: "jenkins-reform-cet"
                      - usernamePassword:
                          description: "GitHub - FPLA"
                          id: "jenkins-github-hmcts-api-token_fpl"
                          password: "${hmcts-github-apikey-fpl}"
                          scope: GLOBAL
                          username: "jenkins-reform-fpl"
                      - usernamePassword:
                          description: "SSH credentials for Jenkins agents"
                          id: "vm_agent_creds"
                          password: "${mgmt-bastion-creds-password}"
                          scope: GLOBAL
                          username: "jenkinsssh"
                      - string:
                          description: "Read/Write Key To Publish CosmosDB Metrics"
                          id: "COSMOSDB_TOKEN_KEY"
                          scope: GLOBAL
                          secret: "${pipelinemetrics-cosmosdb-key}"
                      - usernamePassword:
                          description: "Username and password for the OWASP vulnerability database"
                          id: "owasp-db-login"
                          password: "${OWASPDb-Password}"
                          scope: GLOBAL
                          username: "owasp_administrator"
                      - usernamePassword:
                          description: "Storage account name and access key for storing build reports"
                          id: "buildlog-storage-account"
                          password: "${jenkins-build-logs-key}"
                          scope: GLOBAL
                          username: "mgmtbuildlogstoresandbox"
                      - sauce:
                          apiKey: "${sauce-access-key}"
                          description: "Sauce Labs Reform Key"
                          id: "reform_tunnel"
                          scope: GLOBAL
                          username: "reform"
                          restEndpoint: "https://eu-central-1.saucelabs.com/"
                      - azureImds:
                          azureEnvName: "Azure"
                          description: "Jenkins Azure identity"
                          id: "jenkins-managed-identity"
                          scope: GLOBAL
                      - azure:
                          azureEnvironmentName: "Azure"
                          clientId: "${sp-app-id}"
                          clientSecret: "${sp-app-password}"
                          description: "Jenkins Service Principal"
                          id: "jenkinsServicePrincipal"
                          scope: GLOBAL
                          subscriptionId: "${subscription-id}"
                          tenant: "${jenkins-sp-tenant-id}"
                      - usernamePassword:
                          description: "GitHub - Access Management"
                          id: "jenkins-github-hmcts-api-token_am"
                          password: "${hmcts-github-apikey-am}"
                          scope: GLOBAL
                          username: "jenkins-reform-am"
                      - usernamePassword:
                          description: "GitHub - CTSC"
                          id: "jenkins-github-hmcts-api-token_ctsc"
                          password: "${hmcts-github-apikey-ctsc}"
                          scope: GLOBAL
                          username: "jenkins-reform-ctsc"
                      - usernamePassword:
                          description: "GitHub - Ethos"
                          id: "jenkins-github-hmcts-api-token_ethos"
                          password: "${hmcts-github-apikey-ethos}"
                          scope: GLOBAL
                          username: "jenkins-reform-ethos"
                      - usernamePassword:
                          description: "GitHub - Reference Data"
                          id: "jenkins-github-hmcts-api-token_rd"
                          password: "${hmcts-github-apikey-rd}"
                          scope: GLOBAL
                          username: "jenkins-reform-rd"
                      - usernamePassword:
                          description: "GitHub - MI"
                          id: "jenkins-github-hmcts-api-token_mi"
                          password: "${hmcts-github-apikey-mi}"
                          scope: GLOBAL
                          username: "jenkins-reform-mi"
                      - usernamePassword:
                          description: "GitHub - Bulk Scanning"
                          id: "jenkins-github-hmcts-api-token_bsp"
                          password: "${hmcts-github-apikey-bsp}"
                          scope: GLOBAL
                          username: "jenkins-reform-bulkscan"
                      - gitHubApp:
                          appID: "52866"
                          description: "GitHub APP Key - RPE"
                          id: "hmcts-jenkins-rpe"
                          privateKey: "${hmcts-jenkins-rpe-ghapp}"
                      - gitHubApp:
                          appID: "52960"
                          description: "GitHub APP Key - CNP"
                          id: "hmcts-jenkins-cnp"
                          privateKey: "${hmcts-jenkins-cnp-ghapp}"
                      - gitHubApp:
                          appID: "54542"
                          description: "GitHub APP Key - pcq"
                          id: "hmcts-jenkins-pcq"
                          privateKey: "${hmcts-jenkins-pcq-ghapp}"
                      - gitHubApp:
                          appID: "54385"
                          description: "GitHub APP Key - xui"
                          id: "hmcts-jenkins-xui"
                          privateKey: "${hmcts-jenkins-xui-ghapp}"
                      - gitHubApp:
                          appID: "54687"
                          description: "GitHub APP Key - adoption"
                          id: "hmcts-jenkins-adoption"
                          privateKey: "${hmcts-jenkins-adoption-ghapp}"
                      - gitHubApp:
                          appID: "58060"
                          description: "GitHub APP Key - am"
                          id: "hmcts-jenkins-am"
                          privateKey: "${hmcts-jenkins-am-ghapp}"
                      - gitHubApp:
                          appID: "58046"
                          description: "GitHub APP Key - bsp"
                          id: "hmcts-jenkins-bsp"
                          privateKey: "${hmcts-jenkins-bsp-ghapp}"
                      - gitHubApp:
                          appID: "58044"
                          description: "GitHub APP Key - cdm"
                          id: "hmcts-jenkins-cdm"
                          privateKey: "${hmcts-jenkins-cdm-ghapp}"
                      - gitHubApp:
                          appID: "58041"
                          description: "GitHub APP Key - cmc"
                          id: "hmcts-jenkins-cmc"
                          privateKey: "${hmcts-jenkins-cmc-ghapp}"
                      - gitHubApp:
                          appID: "58067"
                          description: "GitHub APP Key - ctsc"
                          id: "hmcts-jenkins-ctsc"
                          privateKey: "${hmcts-jenkins-ctsc-ghapp}"
                      - gitHubApp:
                          appID: "58042"
                          description: "GitHub APP Key - div"
                          id: "hmcts-jenkins-div"
                          privateKey: "${hmcts-jenkins-div-ghapp}"
                      - gitHubApp:
                          appID: "58064"
                          description: "GitHub APP Key - ethos"
                          id: "hmcts-jenkins-ethos"
                          privateKey: "${hmcts-jenkins-ethos-ghapp}"
                      - gitHubApp:
                          appID: "58052"
                          description: "GitHub APP Key - feepay"
                          id: "hmcts-jenkins-feepay"
                          privateKey: "${hmcts-jenkins-feepay-ghapp}"
                      - gitHubApp:
                          appID: "58043"
                          description: "GitHub APP Key - finrem"
                          id: "hmcts-jenkins-finrem"
                          privateKey: "${hmcts-jenkins-finrem-ghapp}"
                      - gitHubApp:
                          appID: "58059"
                          description: "GitHub APP Key - fpl"
                          id: "hmcts-jenkins-fpl"
                          privateKey: "${hmcts-jenkins-fpl-ghapp}"
                      - gitHubApp:
                          appID: "58045"
                          description: "GitHub APP Key - iac"
                          id: "hmcts-jenkins-iac"
                          privateKey: "${hmcts-jenkins-iac-ghapp}"
                      - gitHubApp:
                          appID: "58058"
                          description: "GitHub APP Key - idam"
                          id: "hmcts-jenkins-idam"
                          privateKey: "${hmcts-jenkins-idam-ghapp}"
                      - gitHubApp:
                          appID: "58069"
                          description: "GitHub APP Key - mi"
                          id: "hmcts-jenkins-mi"
                          privateKey: "${hmcts-jenkins-mi-ghapp}"
                      - gitHubApp:
                          appID: "58050"
                          description: "GitHub APP Key - probate"
                          id: "hmcts-jenkins-probate"
                          privateKey: "${hmcts-jenkins-probate-ghapp}"
                      - gitHubApp:
                          appID: "58068"
                          description: "GitHub APP Key - rd"
                          id: "hmcts-jenkins-rd"
                          privateKey: "${hmcts-jenkins-rd-ghapp}"
                      - gitHubApp:
                          appID: "58048"
                          description: "GitHub APP Key - rpa"
                          id: "hmcts-jenkins-rpa"
                          privateKey: "${hmcts-jenkins-rpa-ghapp}"
                      - gitHubApp:
                          appID: "58049"
                          description: "GitHub APP Key - sscs"
                          id: "hmcts-jenkins-sscs"
                          privateKey: "${hmcts-jenkins-sscs-ghapp}"
                      - gitHubApp:
                          appID: "60878"
                          description: "GitHub APP Key - rse"
                          id: "hmcts-jenkins-rse"
                          privateKey: "${hmcts-jenkins-rse-ghapp}"                          
          jobs: |
            jobs:
              - url: https://raw.githubusercontent.com/hmcts/cnp-jenkins-config/master/jobdsl/organisations-beta.groovy

      sidecars:
        configAutoReload:
          # If enabled: true, Jenkins Configuration as Code will be reloaded on-the-fly without a reboot.  If false or not-specified,
          # jcasc changes will cause a reboot and will only be applied at the subsequent start-up.  Auto-reload uses the Jenkins CLI
          # over SSH to reapply config when changes to the configScripts are detected.  The admin user (or account you specify in
          # master.adminUser) will have a random SSH private key (RSA 4096) assigned unless you specify adminSshKey.  This will be saved to a k8s secret.
          enabled: true
          image: shadwell/k8s-sidecar:0.0.2
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
          env:
            - name: REQ_TIMEOUT
              value: "60"
          # SSH port value can be set to any unused TCP port.  The default, 1044, is a non-standard SSH port that has been chosen at random.
          # Is only used to reload jcasc config from the sidecar container running in the Jenkins master pod.
          # This TCP port will not be open in the pod (unless you specifically configure this), so Jenkins will not be
          # accessible via SSH from outside of the pod.  Note if you use non-root pod privileges (runAsUser & fsGroup),
          # this must be > 1024:
          sshTcpPort: 1044
          # folder in the pod that should hold the collected dashboards:
          folder: "/var/jenkins_home/casc_configs"
          # If specified, the sidecar will search for JCasC config-maps inside this namespace.
          # Otherwise the namespace in which the sidecar is running will be used.
          # It's also possible to specify ALL to search in all namespaces:
          # searchNamespace:

      ingress:
        enabled: true
        # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'
        apiVersion: "networking.k8s.io/v1beta1"
        labels: {}
        annotations:
          kubernetes.io/ingress.class: traefik

    agent:
      enabled: false

    persistence:
      enabled: true
      ## A manually managed Persistent Volume and Claim
      ## Requires persistence.enabled: true
      ## If defined, PVC must be created manually before volume will be bound
      existingClaim: "jenkins"
      ## jenkins data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass:
      annotations: {}
      accessMode: "ReadWriteOnce"
      size: "8Gi"

    ## Install Default RBAC roles and bindings
    rbac:
      create: true

    checkDeprecation: true

