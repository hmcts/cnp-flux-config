apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ccd-logstash
spec:
  releaseName: ccd-logstash-indexer3
  values:
    replicas: 0 # Override value in env patches when required
    logstashConfig:
      logstash.yml: |
        http.host: 0.0.0.0
        xpack.monitoring.enabled: true
        xpack.monitoring.elasticsearch.hosts: ["${ES_HOSTS}"]
        queue.type: persisted
        dead_letter_queue.enable: true
      pipelines.yml: |
        - pipeline.id: main
          path.config: "/usr/share/logstash/pipeline/{01_input,02_filter,03_output}.conf"
          pipeline.workers: 8
          pipeline.batch.size: 200
          queue.type: persisted
        - pipeline.id: index-dead-letter-to-es
          path.config: "/usr/share/logstash/pipeline/dead_letter_indexing_pipeline.conf"
          pipeline.workers: 1
          dead_letter_queue.enable: false
    logstashPipeline:
      01_input.conf: |
        input {
          jdbc {
            jdbc_connection_string => "${DATA_STORE_URL}"
            jdbc_user => "${DATA_STORE_USER}"
            jdbc_password => "${DATA_STORE_PASS}"
            jdbc_validate_connection => true
            jdbc_driver_library => "/usr/share/logstash/ccd/postgresql.jar"
            jdbc_driver_class => "org.postgresql.Driver"
            jdbc_default_timezone => "UTC"
            jdbc_paging_enabled => true
            jdbc_page_size => 100000
            statement => "SELECT id, created_date, last_modified, jurisdiction, case_type_id, state, last_state_modified_date, data::TEXT as json_data, data_classification::TEXT as json_data_classification, reference, security_classification, supplementary_data::TEXT as json_supplementary_data from case_data where id >= (select percentile_disc(0.4) within group (order by case_data.id) from case_data) and id < (select percentile_disc(0.6) within group (order by case_data.id) from case_data) order by id"
            clean_run => false
          }
        }
