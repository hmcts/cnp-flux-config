apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jenkins
  namespace: jenkins
spec:
  values:
    checkDeprecation: false
    controller:
      javaOpts: >-
        -XX:InitialRAMPercentage=30.0 -XX:MaxRAMPercentage=60.0 -XX:MinRAMPercentage=20.0 -XX:+UseParallelOldGC -Xlog:gc*=info,ref*=debug,ergo*=trace,age*=trace:file=/var/jenkins_home/workspace/gc.log::filecount=5,filesize=40M -Djava.util.logging.config.file=/var/jenkins_home/userconf/logging.properties -Djenkins.azure-keyvault.uami.enabled=true -Djenkins.ui.refresh=true -Djenkins.model.Jenkins.logStartupPerformance=true -Dkubernetes.websocket.ping.interval=30000 -Dorg.apache.commons.jelly.tags.fmt.timeZone=Europe/London -Dhudson.model.WorkspaceCleanupThread.retainForDays=2 -Dhudson.model.DirectoryBrowserSupport.CSP="default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; font-src 'self'; img-src 'self'"
      ingress:
        hostName: sandbox-build.platform.hmcts.net
      containerEnv:
        - name: ENVIRONMENT
          value: "sandbox"
        - name: AZURE_KEYVAULT_URL
          value: https://cftsbox-intsvc.vault.azure.net
      JCasC:
        configScripts:
          welcome-message: |
            jenkins:
              systemMessage: >-
                  This jenkins is managed by configuration as code, update <a
                  href="https://github.com/hmcts/cnp-flux-config/blob/master/apps/jenkins/jenkins/sbox-intsvc/jenkins.yaml">here</a>
          env-vars: |
            jenkins:
              globalNodeProperties:
                - envVars:
                    env:
                      - key: INFRA_VAULT_NAME
                        value: cftsbox-intsvc
                      - key: NONPROD_ENVIRONMENT_NAME
                        value: sandbox
                      - key: NONPROD_SUBSCRIPTION_NAME
                        value: sandbox
                      - key: PROD_ENVIRONMENT_NAME
                        value: sandbox
                      - key: PREVIEW_ENVIRONMENT_NAME
                        value: saat
                      - key: PROD_SUBSCRIPTION_NAME
                        value: sandbox
                      - key: JENKINS_SUBSCRIPTION_NAME
                        value: DTS-CFTSBOX-INTSVC
                      - key: JAVA_OPTS
                        value: -Xmx2g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
                      - key: GRADLE_OPTS
                        value: -Xmx2g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
                      - key: SANDBOX_AKS_CLUSTER_NAME
                        value: cft-sbox-00-aks
                      - key: SANDBOX_AKS_RESOURCE_GROUP
                        value: cft-sbox-00-rg
                      - key: AKS_PREVIEW_SUBSCRIPTION_NAME
                        value: DCD-CFTAPPS-SBOX
                      - key: AKS_AAT_SUBSCRIPTION_NAME
                        value: DCD-CFTAPPS-SBOX
                      - key: AAT_AKS_KEY_VAULT
                        value: dcdcftappssboxkv
                      - key: AKS_PROD_SUBSCRIPTION_NAME
                        value: DCD-CFTAPPS-SBOX
                      - key: PROD_AKS_KEY_VAULT
                        value: dcdcftappssboxkv
          views: |
            jenkins:
              views:
                - all:
                    name: all
                - buildMonitor:
                    includeRegex: >-
                      ^HMCTS_.*(Platform|CNP).*\/(draft-store|rpe-pdf-service|feature-toggle-api|service-auth-provider-app|spring-boot-template|cnp-rhubarb-recipes-service|cnp-plum-recipes-service|cnp-plum-frontend|cnp-plum-shared-infrastructure)\/master
                    name: Platform
                    recurse: true
                    title: Platform
          authentication: |
            jenkins:
              securityRealm:
                saml:
                  binding: "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
                  displayNameAttributeName: "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"
                  groupsAttributeName: "http://schemas.microsoft.com/ws/2008/06/identity/claims/groups"
                  idpMetadataConfiguration:
                    period: 15
                    url: https://login.microsoftonline.com/531ff96d-0ae9-462a-8d2d-bec7c0b42082/FederationMetadata/2007-06/FederationMetadata.xml?appid=001b73bc-0fae-46fa-bb7f-2296a655ba33
                  maximumAuthenticationLifetime: 7862400
                  usernameAttributeName: "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"
                  usernameCaseConversion: "none"
          location: |
            unclassified:
              location:
                adminAddress: jenkins-reform@hmcts.net
                url: 'https://sandbox-build.platform.hmcts.net'
          azure-key-vault: |
            unclassified:
              azureKeyVault:
                keyVaultURL: https://cftsbox-intsvc.vault.azure.net
                credentialID: jenkins-managed-identity
          kubernetes-agent: |
            jenkins:
              clouds:
                - kubernetes:
                    addMasterProxyEnvVars: true
                    containerCap: 10
                    containerCapStr: "10"
                    jenkinsTunnel: "jenkins-agent:50000"
                    jenkinsUrl: "http://jenkins:8080"
                    maxRequestsPerHost: 32
                    maxRequestsPerHostStr: "32"
                    name: "kubernetes"
                    namespace: "jenkins"
                    podLabels:
                    - key: "aadpodidbinding"
                      value: "jenkins"
                    - key: "cloud"
                      value: "kubernetes"
                    templates:
                    - activeDeadlineSeconds: 120
                      activeDeadlineSecondsStr: "120"
                      containers:
                      - args: "/bin/sh -c cat"
                        command: "/tini --"
                        image: "hmctspublic.azurecr.io/jenkins/build-agent:db8a7c"
                        livenessProbe:
                          failureThreshold: 3
                          initialDelaySeconds: 150
                          periodSeconds: 15
                          successThreshold: 1
                          timeoutSeconds: 5
                        name: "inbound-agent"
                        resourceLimitCpu: "3000m"
                        resourceLimitMemory: "8Gi"
                        resourceRequestCpu: "1000m"
                        resourceRequestMemory: "2Gi"
                        ttyEnabled: true
                        workingDir: "/home/jenkins/agent"
                      - image: "hmctspublic.azurecr.io/jenkins/minimal-agent:db6hu6"
                        livenessProbe:
                          failureThreshold: 3
                          initialDelaySeconds: 150
                          periodSeconds: 15
                          successThreshold: 1
                          timeoutSeconds: 5
                        name: "jnlp"
                        resourceLimitCpu: "2000m"
                        resourceLimitMemory: "6Gi"
                        resourceRequestCpu: "500m"
                        resourceRequestMemory: "1Gi"
                        ttyEnabled: false
                        workingDir: "/home/jenkins/agent"
                      hostNetwork: false
                      idleMinutes: 10
                      idleMinutesStr: "10"
                      instanceCap: 10
                      instanceCapStr: "10"
                      label: "k8s-agent"
                      name: "k8s-inbound-agent"
                      namespace: "jenkins"
                      podRetention: "never"
                      serviceAccount: "jenkins"
                      supplementalGroups: "118"
                      volumes:
                      - hostPathVolume:
                          hostPath: "/var/run/docker.sock"
                          mountPath: "/var/run/docker.sock"
                      - emptyDirVolume:
                          memory: false
                          mountPath: "/opt/jenkins"
                      - emptyDirVolume:
                          memory: false
                          mountPath: "/home/jenkins/.ssh"
                      - hostPathVolume:
                          hostPath: "/tmp/jenkins-agent"
                          mountPath: "/tmp/jenkins-agent"
                      yaml: |-
                        metadata:
                          labels:
                            app.kubernetes.io/name: jenkins
                            app.kubernetes.io/component: jenkins-agent
                        spec:
                          securityContext:
                            runAsUser: 1000
                            fsGroup: 118
                          initContainers:
                          - name: init-agent
                            image: hmctspublic.azurecr.io/jenkins/minimal-agent:db6hu6
                            command:
                              - /bin/sh
                              - -c
                              - "chown 0:118 /tmp/jenkins-agent && chmod g+rwx /tmp/jenkins-agent"
                            volumeMounts:
                              - mountPath: /tmp/jenkins-agent
                                name: volume-3
                            securityContext:
                              runAsUser: 0
                              runAsGroup: 0
                              privileged: true
                          affinity:
                            podAntiAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                - labelSelector:
                                    matchExpressions:
                                      - key: app.kubernetes.io/component
                                        operator: In
                                        values:
                                          - jenkins-master
                                  topologyKey: "kubernetes.io/hostname"
                      yamlMergeStrategy: "merge"
                      yamls:
                      - |-
                        metadata:
                          labels:
                            app.kubernetes.io/name: jenkins
                            app.kubernetes.io/component: jenkins-agent
                        spec:
                          securityContext:
                            runAsUser: 1000
                            fsGroup: 118
                          initContainers:
                          - name: init-agent
                            image: hmctspublic.azurecr.io/jenkins/minimal-agent:db6hu6
                            command:
                              - /bin/sh
                              - -c
                              - "chown 0:118 /tmp/jenkins-agent && chmod g+rwx /tmp/jenkins-agent"
                            volumeMounts:
                              - mountPath: /tmp/jenkins-agent
                                name: volume-3
                            securityContext:
                              runAsUser: 0
                              runAsGroup: 0
                              privileged: true
                          affinity:
                            podAntiAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                - labelSelector:
                                    matchExpressions:
                                      - key: app.kubernetes.io/component
                                        operator: In
                                        values:
                                          - jenkins-master
                                  topologyKey: "kubernetes.io/hostname"
          azure-vm-agent: |
            jenkins:
              clouds:
                - azureVM:
                    azureCredentialsId: "jenkins-managed-identity"
                    cloudName: "cnp-azure"
                    deploymentTimeout: 1200
                    existingResourceGroupName: "aks-infra-cftsbox-intsvc-rg"
                    maxVirtualMachinesLimit: 10
                    resourceGroupReferenceType: "existing"
                    vmTemplates:
                      - agentLaunchMethod: "SSH"
                        agentWorkspace: "/opt/jenkins"
                        builtInImage: "Windows Server 2016"
                        credentialsId: "vm_agent_creds"
                        diskType: "managed"
                        doNotUseMachineIfInitFails: true
                        enableMSI: false
                        enableUAMI: true
                        ephemeralOSDisk: false
                        executeInitScriptAsRoot: true
                        existingStorageAccountName: "hmctsjenkinssbox"
                        imageReference:
                          galleryImageDefinition: "jenkins-agent"
                          galleryImageVersion: "2.2.9"
                          galleryName: "cnpimagegallery"
                          galleryResourceGroup: "cnp-image-gallery-rg"
                          gallerySubscriptionId: "bf308a5c-0624-4334-8ff8-8dca9fd43783"
                        imageTopLevelType: "advanced"
                        initScript: |
                          usermod -a -G docker jenkinsssh
                          umount /mnt/resource
                          mkdir -pv /opt/jenkins
                          mount /dev/sdb1 /opt/jenkins
                          chown -R jenkinsssh:jenkinsssh /opt/jenkins
                          set -e
                          cp /opt/jenkinsssh_id_rsa /home/jenkinsssh/.ssh/id_rsa
                          chown jenkinsssh:jenkinsssh /home/jenkinsssh/.ssh/id_rsa
                          chmod 0600 /home/jenkinsssh/.ssh/id_rsa
                          mkdir /opt/jenkins/.gradle && echo 'org.gradle.daemon=false' > /opt/jenkins/.gradle/gradle.properties
                          cat > /etc/security/limits.d/30-jenkins.conf<<EOF
                          jenkinsssh soft nofile 40960
                          jenkinsssh hard nofile 40960
                          jenkinsssh soft
                          proc 32768
                          jenkinsssh hard nproc 32768
                          EOF
                          ssh-keyscan github.com github.com >> /home/jenkinsssh/.ssh/known_hosts
                          ssh-keygen -F github.com -f /home/jenkinsssh/.ssh/known_hosts # verifies key is correctly installed
                          chown jenkinsssh:jenkinsssh /home/jenkinsssh/.ssh/known_hosts
                        installDocker: false
                        installGit: false
                        installMaven: false
                        javaPath: /usr/lib/jvm/java-11-openjdk/bin/java
                        jvmOptions: "-Xms4G -Xmx4G -XX:+UseG1GC -XX:+UseCompressedOops -XX:+UseCompressedClassPointers\
                      \ -XX:+AlwaysPreTouch -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled\
                      \ -XX:+UnlockExperimentalVMOptions -XX:G1NewSizePercent=20 -XX:+UnlockDiagnosticVMOptions\
                      \ -XX:G1SummarizeRSetStatsPeriod=1"
                        location: "UK South"
                        noOfParallelJobs: 1
                        osDiskSize: 60
                        osDiskStorageAccountType: "StandardSSD_LRS"
                        osType: "Linux"
                        preInstallSsh: true
                        retentionStrategy:
                          azureVMCloudRetentionStrategy:
                            idleTerminationMinutes: 60
                        shutdownOnIdle: false
                        storageAccountNameReferenceType: "existing"
                        storageAccountType: "Standard_LRS"
                        subnetName: "iaas"
                        templateDesc: "Jenkins build agents for HMCTS"
                        templateDisabled: false
                        templateName: "cnp-jenkins-builders"
                        uamiID: /subscriptions/1497c3d7-ab6d-4bb7-8a10-b51d03189ee3/resourceGroups/managed-identities-cftsbox-intsvc-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/jenkins-cftsbox-intsvc-mi
                        usageMode: "Use this node as much as possible"
                        usePrivateIP: true
                        virtualMachineSize: "Standard_D4s_v3"
                        virtualNetworkName: "core-cftsbox-intsvc-vnet"
                        virtualNetworkResourceGroupName: "aks-infra-cftsbox-intsvc-rg"
