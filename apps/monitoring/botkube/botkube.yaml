---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: botkube
  namespace: monitoring
spec:
  releaseName: botkube
  interval: 5m
  chart:
    spec:
      chart: helm/botkube
      sourceRef:
        name: botkube
        kind: GitRepository
        namespace: monitoring
  valuesFrom:
    - kind: Secret
      name: "botkube-values"
  values:
    serviceAccount:
      name: botkube
    image:
      tag: v1.10.0
    settings:
      clusterName: cft-${CLUSTER_FULL_NAME}-aks
      upgradeNotifier: false
    aliases:
      kg:
        command: kubectl get
        displayName: "Kubectl get alias"
      kgp:
        command: kubectl get pods
        displayName: "Kubectl get pods alias"
      kgpooyaml:
        command: kubectl get pods -o=yaml
        displayName: "Kubectl get pods yaml alias"
      kdpo:
        command: 'kubectl describe pods'
        displayName: "kubectl describe pods alias"
    executors:
      k8s-default-tools:
        botkube/kubectl:
          enabled: true
          config:
            defaultNamespace: "admin"
            interactiveBuilder:
              allowed:
                verbs: ["describe", "get", "top"]
                resources: ["events", "namespaces", "nodes", "pods", "services", "daemonsets", "deployments", "ingresses", "replicasets", "jobs", "configmaps", "helmreleases"]
    rbac:
      rules:
        - apiGroups: ["*"]
          resources: ["events", "namespaces", "nodes", "pods", "services", "daemonsets", "deployments", "ingresses", "replicasets", "jobs", "configmaps", "helmreleases"]
          verbs: ["get", "watch", "list"]
    resources:
      requests:
        cpu: 100m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
    tolerations:
      - key: CriticalAddonsOnly
        operator: Equal
        value: "true"
        effect: NoSchedule
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                    - system
    sources:
      'k8s-recommendation-events':
        botkube/kubernetes:
          enabled: false
      'k8s-all-events':
        displayName: "Kubernetes Info"
        botkube/kubernetes:
          enabled: true
          config:
            filters:
              objectAnnotationChecker: true
              nodeEventsChecker: true
            namespaces: &k8s-events-namespaces
              include:
                - ".*"
            event:
              types: []
            resources:
              - type: apps/v1/daemonsets
                event: # Overrides 'source'.kubernetes.event
                types:
                  - update
                updateSetting:
                  includeDiff: true
                  fields:
                    - spec.template.spec.containers[*].image
              - type: batch/v1/jobs
                event: # Overrides 'source'.kubernetes.event
                types:
                  - update
                updateSetting:
                  includeDiff: true
                  fields:
                    - spec.template.spec.containers[*].image
              - type: apps/v1/deployments
                event: # Overrides 'source'.kubernetes.event
                types:
                  - update
                updateSetting:
                  includeDiff: true
                  fields:
                    - spec.template.spec.containers[*].image
              - type: apps/v1/statefulsets
                event: # Overrides 'source'.kubernetes.event
                types:
                  - update
                updateSetting:
                  includeDiff: true
                  fields:
                    - spec.template.spec.containers[*].image
      'k8s-err-events':
        botkube/kubernetes:
          enabled: false
      'k8s-err-with-logs-events':
        botkube/kubernetes:
          enabled: false
      'k8s-create-events':
        botkube/kubernetes:
          enabled: true
          config:
            namespaces: *k8s-events-namespaces
            event:
              types:
                - create
            resources:
              - type: v1/nodes
    communications:
      'default-group':
        ## Settings for Slack with Socket Mode.
        socketSlack:
          # -- If true, enables Slack bot.
          enabled: true
          # -- Map of configured channels. The property name under `channels` object is an alias for a given configuration.
          #
          ## Format: channels.{alias}
          channels:
            'default':
              # -- Slack channel name without '#' prefix where you have added Botkube and want to receive notifications in.
              name: '${TEAM_NOTIFICATION_CHANNEL}'
              bindings:
                # -- Executors configuration for a given channel.
                executors:
                  - k8s-default-tools
                # -- Notification sources configuration for a given channel.
                sources:
                  - k8s-err-events
                  - k8s-create-events
                  - k8s-all-events